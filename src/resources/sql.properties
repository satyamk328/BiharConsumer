# START USER SERVICE QUERY
select_user_history=select * from user_master
insert_user_detail=INSERT INTO user_master (name, email,address,phonenumber,pannumber, password, city, state, islock,\
				isactive,createdby, createdon, modifyby, modifyon) VALUES\
				(? ,? , ? ,	? , ? , ?,?,?, false, true, Session_user, CURRENT_TIMESTAMP, Session_user, CURRENT_TIMESTAMP)
insert_user_module=INSERT INTO user_module (userid,privilegename,isrecharge,isbillpayment,ismoneytransfer,isaddmoney,isexportreport,isbusbook,createdby,\
				createdon, modifyby, modifyon) VALUES (?, ? ,true , true , true , true , true, true, Session_user,\
				CURRENT_TIMESTAMP, Session_user, CURRENT_TIMESTAMP)
insert_user_login_detail=INSERT INTO user_login (userid,username,sessionid,logindate,address,clientip,clienthost)\
				values(?,?,?,CURRENT_TIMESTAMP,?,?,?)

update_user_master_lock=UPDATE user_master SET attempt = ?,islock=? WHERE userId = ?
select_user_detail_by_phone=SELECT * FROM user_master left outer join user_module on user_master.userId=user_module.userId where user_master.phoneNumber\
				= ? and islock=false and isactive=true and user_module.privilegename='RETAILER' limit 1
select_user_detail_by_email=SELECT * FROM user_master left outer join user_module on user_master.userId=user_module.userId where user_master.email\
				= ? and	islock=false and isactive=true and	user_module.privilegename='RETAILER' limit 1
update_user_password=UPDATE user_master SET password = ? WHERE userId = ?
select_auth_user_by_phone=SELECT * FROM user_master left outer join user_module on user_master.userId=user_module.userId where user_master.phoneNumber\
				= ? and password=? and islock=false and isactive=true and user_module.privilegename='RETAILER' limit 1
select_auth_user_by_email=SELECT * FROM user_master left outer join user_module on user_master.userId=user_module.userId where user_master.email \
				= ? and	password=? and islock=false and isactive=true and user_module.privilegename='RETAILER' limit 1
upadte_logintime=update user_login set logout_date= now(), clientip=? where	userid =? and logout_date is null
#    END USER SERVICE QUERY
#    start wallet query
select_wallet_details_by_user=select * from user_wallet where lower(userId)=? order by modifyon desc
select_updated_wallet=select * from user_wallet where lower(userId)=? order by modifyon desc limit 1
update_wallet=UPDATE user_wallet set addedBalance=?,currentBalance=currentBalance+addedBalance,	previousBalance=currentBalance where lower(userId)=?
#    end wallet QUERY
#    start top cities Query
select_top_cities=select * from top_cities order by cityid
select_search_top_cities=select * from top_cities where lower(displayName) like ? order	by refnumber
insert_top_city=INSERT INTO top_cities (cityname,displayname,statename,country)	VALUES(?,?,?,?)
#    end top cities QUERY
select_trip_by_city=select * from ( \
					SELECT r.routeid,CONCAT(ts.stopid,'::',re.stopid,'::',ts.stopnumber,'::',re.stopnumber) tripid,ts.arrivaldate arrivaldate,ts.arrivaltime arrivaltime,re.arrivaldate departuredate,re.arrivaltime departuretime, \
					(select sum(tdis.distance) from trip_details tdis join top_cities city on (city.cityid = tdis.cityid) where  tdis.stopnumber > ts.stopnumber and tdis.stopnumber <= re.stopnumber) distance, \
					(select sum(tdis.duration) from trip_details tdis join top_cities city on (city.cityid = tdis.cityid) where  tdis.stopnumber > ts.stopnumber and tdis.stopnumber <= re.stopnumber) duration, \
					(select sum(tdis.basefare) from trip_details tdis join top_cities city on (city.cityid = tdis.cityid) where  tdis.stopnumber > ts.stopnumber and tdis.stopnumber <= re.stopnumber) basefare, \
					ss.displayname source,se.displayname destination \
					FROM route_master r	JOIN trip_details ts ON (ts.routeid = r.routeid) \
					JOIN top_cities ss ON (ss.cityid = ts.cityid) \
					JOIN trip_details re ON (re.routeid = r.routeid) \
					JOIN top_cities se ON (se.cityid = re.cityid) \
					WHERE lower(ss.displayname) LIKE ? AND lower(se.displayname) LIKE ? and re.arrivaldate::TEXT=? AND ts.stopnumber < re.stopnumber \
					) tt JOIN bus_operators_route_mapping bsm on (bsm.routeid=tt.routeid) JOIN bus_master bs on (bs.busid=bsm.busid) JOIN bus_layout bl ON (bl.id=bsm.layoutid)
select_boadingstopping_details=select * from city_stop_mapping where tripid =?
select_bustype=select * from bus_type order by bustype
select_bus_cancellation=select * from bus_cancellation_policy where busid = ? 
select_filter_aminities=select bam.amenityid from bus_amenity ba, bus_amenity_mapping bam where ba.id = bam.amenityid and bam.busid= ?
select_all_aminities= select * from bus_amenity order by id
select_businfomation_detail=select * from bus_details where sourceid = (select refnumber from top_cities where displayname like ? ) and destinationid = \
				       (select refnumber from top_cities where displayname like ? )
insert_customer_ticket=INSERT INTO customer_bus_booking_details	(userid,busname,busnumber,seatnumber,srccityname,destcityname,arrivaldatetime,departuredatetime,seattype,totalfare,customername,age,email, \
				     phonenumber,idtype,idnumber,islicence,createdon,createdby,modifyon,modifyby) VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,Session_user,CURRENT_TIMESTAMP,Session_user,CURRENT_TIMESTAMP)
select_bus_seat_details=select sm.*,borm.sleaperFare, (CASE WHEN lower(seattype) = 'seater' THEN \
 							borm.seaterFare+ (select sum(tdis.basefare) from trip_details tdis join top_cities city on (city.cityid = tdis.cityid) where tdis.stopnumber > ? and tdis.stopnumber <= ?) \
 							ELSE borm.sleaperFare+ (select sum(tdis.basefare) from trip_details tdis join top_cities city on (city.cityid = tdis.cityid) where tdis.stopnumber > ? and tdis.stopnumber <= ?) \
 							END) fare  from bus_layout bl JOIN bus_operators_route_mapping borm ON (borm.layoutid=bl.id) JOIN seat_master sm ON (bl.id=sm.seatlayoutid) where lower(busid)= ?
select_customer_book_ticket=select * from customer_bus_booking_details where lower(userid)=? limit ?
