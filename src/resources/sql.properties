#================================
# = User Query
#================================
select_user_history=select * from user_master order by UserId ASC
select_user_byid=select * from user_master where UserId=:userId
insert_user_detail=INSERT INTO user_master (RoleId,Name, Email,Address,PhoneNumber,PanNumber, Password, City, State,Country, IsLock, IsActive,CreatedBy, DateCreated, ModifiedBy, DateModified) VALUES \
				                   (:roleId,:name ,:email , :address ,	:phoneNumber , :panNumber , :password,:city,:state,'INDIA', false, true, Session_user, CURRENT_TIMESTAMP, Session_user, CURRENT_TIMESTAMP)
insert_user_login_detail=INSERT INTO user_login (UserId,UserName,SessionId,LoginDate,Address,ClientIp,ClientHost)\
				                values(:userId,:userName,:sessionId,CURRENT_TIMESTAMP,:address,:clientIp,:clientHost)
update_user_master_Attempt=UPDATE user_master SET Attempt =:attempt, IsLock=:isLock WHERE UserId =:userId
update_user_password=UPDATE user_master SET Password =:password WHERE UserId =:userId
select_user_detail_by_phone=SELECT * FROM user_master WHERE user_master.phoneNumber=:phone AND user_master.IsActive=1 LIMIT 1
select_user_detail_by_email=SELECT * FROM user_master WHERE  user_master.Email=:email AND user_master.IsActive=1 LIMIT 1
upadte_logout_date=update user_login set LogoutDate= CURRENT_TIMESTAMP, ClientIp=:clientIp where UserId =:userId and LogoutDate is null
#================================
# = Wallet Query
#================================
select_wallet_details_by_user=select * from user_wallet where UserId=:userId order by DateModified ASC
select_updated_wallet=select * from user_wallet where UserId=:userId order by DateModified ASC limit 1
update_wallet=UPDATE user_wallet set AddedBalance=:addedBalance,CurrentBalance=CurrentBalance+AddedBalance,	PreviousBalance=CurrentBalance where UserId=:userId
#================================
# = Search City Query
#================================
select_search_cities=select * from city_master order by CityId
select_search_top_cities=select * from city_master where lower(DisplayName) like concat('%', ? , '%') order by CityId
select_search_top_cities_By_Id=select * from city_master where CityId=:cityId
insert_search_city=INSERT INTO city_master(CityName, DisplayName, StateName, Country, District) \
             	VALUES(:cityName, :displayName, :stateName, :country, :district)
delete_top_city=delete from city_master where CityId = :cityId
update_top_city=UPDATE city_master set CityName=:cityName,DisplayName=:displayName,StateName=:stateName,Country=:country,District=:district where CityId=:cityId
select_city_stop_by_cityId=select * from city_stop_master where Cityid=:cityId
insert_city_stop=insert into city_stop_master (CityId,LocationName,LocationAddress,LandMark,Lat,Lng) \
                        values(:cityId,:locationName,:locationAddress,:landMark,:lat,:lng)
delete_cityStop_bycityId=delete from city_stop_master where CityId IN (:cityId)
#================================
# = Amenity Query
#================================
select_filter_aminities=SELECT amenity_master.* FROM amenity_master INNER JOIN amenity_mapping ON amenity_master.AmenityId=amenity_mapping.AmenityId WHERE amenity_mapping.BusId=:busId
select_all_aminities= select * from amenity_master order by AmenityId ASC
select_aminities_by_busid=select * from amenity_master where AmenityId=:amenityId and BusId=:busId
delete_aminities_query=delete from bus_amenity_mapping where AmenityId=:amenityId and BusId=:busId
insert_aminities_query=insert into bus_amenity_mapping (AmenityId,BusId) values(:amenityId,:busId)

#    end top cities QUERY
select_trip_by_city=SELECT sm.ScheduleId as scheduleId, sm.BusId as busId, sm.SleeperFare as sleeperFare, sm.SeaterFare as seaterFare, sm.IsFixed as isFixedFare, tm1.CityId AS srcCity, tm2.CityId AS destCity, tm1.CityStops AS srcStops, \
 						tm2.CityStops  AS destStops, tm1.ArrivalDate AS departureDate, tm1.Time AS departureTime, tm2.ArrivalDate AS arrivalDate, tm2.Time AS arrivalTime, \
 						tm1.CitySequance as srcCitySequance, tm2.CitySequance as destCitySequance \
 						FROM digitalbihar.Schedule_master sm, \
                        digitalbihar.trip_master tm1, digitalbihar.trip_master tm2 \
						WHERE sm.ScheduleId = tm1.ScheduleId AND tm1.ScheduleId = tm2.ScheduleId AND  tm1.ScheduleId = tm2.ScheduleId AND \
						tm1.CityId =:srcCityId AND tm2.CityId =:destCityId AND tm1.CitySequance < tm2.CitySequance AND tm1.ArrivalDate =:arrivalDate
						
select_boadingstopping_details=select * from city_stop_master where CityId = :cityId and CityStopId IN (:cityStopIds)

select_bustype=select * from bus_type order by bustype
select_bus_cancellation=select * from bus_cancellation_policy where BusId = ? 

select_businfomation_detail=select * from bus_details where sourceid = (select refnumber from top_cities where displayname like ? ) and destinationid = \
				       (select refnumber from top_cities where displayname like ? )
insert_customer_ticket=INSERT INTO customer_bus_booking_details	(userid,busname,busnumber,seatnumber,srccityname,destcityname,arrivaldatetime,departuredatetime,seattype,totalfare,customername,age,email, \
				     phonenumber,idtype,idnumber,islicence,createdon,createdby,modifyon,modifyby) VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,Session_user,CURRENT_TIMESTAMP,Session_user,CURRENT_TIMESTAMP)
select_bus_seat_details=select sm.*,borm.sleaperFare, (CASE WHEN lower(seattype) = 'seater' THEN \
 							borm.seaterFare+ (select sum(tdis.basefare) from trip_details tdis join top_cities city on (city.cityid = tdis.cityid) where tdis.stopnumber > ? and tdis.stopnumber <= ?) \
 							ELSE borm.sleaperFare+ (select sum(tdis.basefare) from trip_details tdis join top_cities city on (city.cityid = tdis.cityid) where tdis.stopnumber > ? and tdis.stopnumber <= ?) \
 							END) fare  from bus_layout bl JOIN bus_operators_route_mapping borm ON (borm.layoutid=bl.id) JOIN seat_master sm ON (bl.id=sm.seatlayoutid) where lower(busid)= ?
select_customer_book_ticket=select * from customer_bus_booking_details where lower(userid)=? limit ?

#================================
# = Auditing Query
#================================
central_log_insert_query=insert into ceselect_TripCities_BySrcDescCitiesntral_logs(AppName, LogLevel, LogTimeStamp, LogMessage) values( :appName, :logLevel, :logTimeStamp, :logMessage)
service_api_response_log.insert.entry=INSERT INTO servicing_platform_api_response_log (ApiName, StartTime,EndTime,DurationMilliSeconds,RequestHttpMethod,RequestUrl,RequestBody,ResponseHttpCode,ResponseBody,RequestHeader,ResponseHeader) \
                                                 VALUES (:ApiName ,:StartTime,:EndTime,:DurationMilliSeconds,:RequestHttpMethod,:RequestUrl,:RequestBody,:ResponseHttpCode,:ResponseBody,:RequestHeader,:ResponseHeader )



####################################################3
select_Bus_Details_By_BusId=SELECT bm.BusId as busId, bm.UserId as ownerId, bm.LayoutId as layoutId, bm.BusNumber as busNumber, bm.TravelsName as travelsName,\
bm.RegistationNumber as registationNumber, bm.color as color, bm.TotalSeats as totalSeats, bm.IsAc as isAc, blm.BusType as busType,\
blm.Description as layOutDescription, blm.IsSeater as isSeater, blm.IsSleeper as isSleeper \
FROM bus_master bm, bus_layout_master blm where bm.LayoutId = blm.LayoutId and bm.BusId =:busId
 
 select_SeatDetails_By_LayoutId=SELECT * from seat_master where BusLayoutId=:layoutId
 
 select_TicketDetails_By_ScheduleAndBusId= SELECT tm.TicketId as ticketId, tm.ScheduleId as scheduleId, tm.UserId as userId, \
 tm.SeatId as seatId, tm.TripId as tripId \
 from ticket_master tm where tm.ScheduleId=:scheduleId and tm.BusId=:busId
 
 select_TripCities_BySrcDescCities=SELECT tm.CityId as cityId, tm.CitySequance as citySequance FROM trip_master tm where tm.CitySequance between :srcCitySequance and :destCitySequance and tm.ScheduleId = :scheduleId order by tm.CitySequance
 
 #################################TOMORROW
 select_TripCitySequence_ByCityId=SELECT tm.CitySequance as citySequance FROM trip_master tm where tm.CityId = :cityId and tm.ScheduleId = :scheduleId
 
 insert_ticket_master=INSERT INTO ticket_master \
 (ScheduleId, UserId ,SeatId, BusId, TripId, BusType, IsAc, SeatType, SeatNumber, IsLowerBerth, TotalFare) \
 VALUES(:scheduleId, :userId, :seatId, :busId, :tripId, :busType, :isAc, :seatType, :seatNumber, :isLowerBerth, :totalFare)
 
 
 select_TripBy_SchId_BusId_SrcCtyId_DescCtyId=SELECT sm.ScheduleId as scheduleId, sm.BusId as busId, sm.SleeperFare as sleeperFare, sm.SeaterFare as seaterFare, sm.IsFixed as isFixedFare, tm1.CityId AS srcCity, tm2.CityId AS destCity, tm1.CityStops AS srcStops, \
 						tm2.CityStops  AS destStops, tm1.ArrivalDate AS departureDate, tm1.Time AS departureTime, tm2.ArrivalDate AS arrivalDate, tm2.Time AS arrivalTime, \
 						tm1.CitySequance as srcCitySequance, tm2.CitySequance as destCitySequance \
 						FROM digitalbihar.Schedule_master sm, \
                        digitalbihar.trip_master tm1, digitalbihar.trip_master tm2 \
						WHERE sm.ScheduleId = tm1.ScheduleId AND tm1.ScheduleId = tm2.ScheduleId AND  tm1.ScheduleId = tm2.ScheduleId AND \
						tm1.CityId =:srcCityId AND tm2.CityId =:destCityId AND sm.ScheduleId =:scheduleId AND sm.BusId = :busId AND tm1.CitySequance < tm2.CitySequance
 